@using Rem.Models
@using DataLibrary
@using Microsoft.Extensions.Configuration
@inject IDataAcess _data
@inject IConfiguration _config
@inject LoggedState loginState
@inject NavigationManager NavManager

@page "/central/{Id}/remover/"

<h3>Remover</h3>

@if (res == true)
{
    <h4>Remover</h4>
    <p>Insira a sua Palavra Pass</p>
    <input id="Pass" name="Pass" type="text" @bind-value="Pass" />
    <button type="submit" @onclick=@Remover> Submit </button>
}
else
{
    <p>Não tem Permissão</p>
}
@if (notificacao) {<p>Palavra Pass Errada</p>}

@code {

    string Pass = "";

    List<BooleanModel> booleanModelos;
    bool res = false;
    bool notificacao = false;

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        string sql = "CALL verificaGestor(" + Id + ",'" + loginState.Username + "','" + loginState.Pass + "')";
        booleanModelos = await _data.LoadData<BooleanModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
        foreach (var i in booleanModelos)
        {
            if (i.BooleanM == true) res = true;
        }
    }

    private async Task Remover()
    {
        if (Pass == loginState.Pass)
        {
            string sql = "CALL removeCentral(" + Id + ")";
            await _data.SaveData(sql, new { }, _config.GetConnectionString("default"));
            NavManager.NavigateTo("/mapaCentral");
        }
        else {
            notificacao = true;
        }
    }
}