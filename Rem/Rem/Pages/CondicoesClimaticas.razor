@page "/central/{id}/condicoesClimaticas"

@using DataLibrary
@using Rem.Models
@using Microsoft.Extensions.Configuration
@inject IDataAcess _data
@inject IConfiguration _config
@inject NavigationManager NavManager
@inject LoggedState loginState;

<h3>HistoricoEnergia</h3>

<input id="date" type="date" placeholder="YYYY-MM-DD" @bind-value="dataMin" />
<input id="date" type="date" placeholder="YYYY-MM-DD" @bind-value="dataMax" />

<p>TipoAtual=@unidade</p>
<button @onclick=@PutHoras> Horas </button>
<button @onclick=@PutDias> Dias </button>
<button @onclick=@PutMes> Mes </button>

<p></p><button type="submit" @onclick=@MostrarHistorico> Submit </button><p></p>

@if (grafico == null)
{
    <p><em>Insira Dados..</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Data</th>
                @if (unidade == "horas")
                {
                    <th>Hora</th>
                }
                <th>Quant</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in grafico)
            {
                <tr>
                    <td>@c.Data.Year - @c.Data.Month - @c.Data.Day </td>
                    @if (unidade == "horas")
                    {
                        <td>@c.Hora</td>
                    }
                    <td>@c.Quant</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    public DateTime dataMin { get; set; }
    public DateTime dataMax { get; set; }
    public string unidade { get; set; } = "nada";
    List<GraficoModel> grafico;

    [Parameter]
    public string Id { get; set; }

    protected void PutHoras()
    {
        unidade = "horas";
    }

    protected void PutDias()
    {
        unidade = "dias";
    }

    protected void PutMes()
    {
        unidade = "mes";
    }

    protected async Task MostrarHistorico()
    {
        string sql = "CALL condicoesClimaticas(" + Id +
            ",'" + dataMin.Year + "-" + dataMin.Month + "-" + dataMin.Day +
            "','" + dataMax.Year + "-" + dataMax.Month + "-" + dataMax.Day +
            "','" + unidade + "');";
        grafico = await _data.LoadData<GraficoModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }
}
